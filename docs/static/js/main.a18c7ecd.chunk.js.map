{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA0CeA,MAtCf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAGAC,mBAAS,IAHT,mBAG7BC,EAH6B,KAGjBC,EAHiB,KAuBpC,OACI,sBAAMC,SAfW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IAGzBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCTjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CAEFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCeLO,EAbK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE1B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCmCDO,EAtCC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECGJ,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WAEPxB,EAAUC,GACRwB,MAAM,SAAAC,GAGJH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAAEpB,IAGEqB,EDvByBK,CAAc1B,GAAlCa,EAFgB,EAErBN,KAAaa,EAFQ,EAERA,QAEpB,OAEI,qCAEI,6BAAKpB,IAEHoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGb,qBAAKA,UAAU,8CAAf,SAIQH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAGQA,GADCA,EAAIC,aEqBtBgB,EAtCM,WAAO,IAAD,EAGazC,mBAAS,CAAC,eAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAOvB,OACI,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAEtB,cAAC,EAAD,CAGIA,SAAYA,GADNA,Y,MCxB9B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.a18c7ecd.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n\nfunction AddCategory ({setCategories} ) {\n\n   \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n       setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        \n        e.preventDefault();\n\n        if (inputValue.trim().length>2) {\n            //console.log('submit echo')\n            //usamos para traer datos de otro componenete \" GitExpertApps \"\n            setCategories(cate => [ inputValue, ...cate]);\n            setInputValue('');\n        }\n\n    \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","\nexport const getGifs = async(category)=>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=UYLKWsQ3lu65n1XYL8JwmzATld82QNwE`\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return{\n\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n\n        }\n    })\n    \n    return gifs;\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n            \n        </div>\n    )\n}\n\n\n\nexport default GifGridItem\n","import React, {  } from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\n\nconst GifGrid = ({category}) => {\n\n   const { data:images, loading } = useFetchGifs( category );\n\n    return (\n\n        <>\n\n            <h3>{category}</h3>\n\n            { loading && <p className='animate__animated animate__flash'>Loading</p>}\n            \n\n            <div className='card-grid animate__animated animate__fadeIn'>\n                \n                \n                {\n                    images.map(img=>(\n\n                        <GifGridItem \n\n                            key={img.id}\n                            {...img}\n                        \n                        />                  \n                    ))\n                }\n                \n            </div>\n          \n        </>\n\n        \n    )\n}\n\n\n\nexport default GifGrid\n","\n\n//los huks son funciones \n\nimport { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = ( category ) => {\n   \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs(  category )\n         .then( imgs => {\n\n            \n            setState({\n                data: imgs,\n                loading: false\n             }); \n         })\n\n    }, [ category ])\n\n\n    return state\n\n}\n","\n// para crear de forma rapida usamos el snipe rafcp\n\nimport React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n// import PropTypes from 'prop-types'\n\nconst GifExpertApp = () => {\n\n  \n    const [categories, setCategories] = useState(['One punchs'])\n\n    \n\n    return (\n        <>\n           <h2>GifExpertApp</h2>\n           <AddCategory setCategories={setCategories}/>\n           <hr />    \n\n            \n            {/* crear listas ordenadas */}\n           <ol>\n               {\n                   categories.map(category => (\n                   \n                    <GifGrid \n                    \n                        key={ category }\n                        category ={ category } \n                    \n                    />\n\n                   ))\n               }\n           </ol>\n\n        </>\n    )\n}\n\n// GifExpertApp.propTypes = {\n\n// }\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}